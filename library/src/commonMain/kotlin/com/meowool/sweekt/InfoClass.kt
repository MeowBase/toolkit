package com.meowool.sweekt

/**
 * Represents an information class.
 *
 * This annotation is similar with 'data class' behavior, but more powerful:
 * ```
 * // Prohibit the generation of 'copy' function,
 * //   and exclude properties in the primary constructor in the generated code.
 * @Info(copyable = false, primaryProperties = false)
 * class Decoder(val input: Input) {
 *   val name: String get() = input.readName()
 * }
 *
 * val decoder = Decoder(input)
 *
 * print(decoder.toString())    // "Decoder(name=John)"
 * decoder.copy()               // Error: Unresolved reference: 'copy'
 * ```
 *
 * @param equatable Generate 'equals' method using all information properties at compile time.
 * @param hashable Generate 'hashCode' method using all information properties at compile time.
 * @param readable Generate `toString` method using all information properties at compile time.
 * @param copyable Generate `copy` method using all information properties at compile time.
 * @param destructurable Generate an 'componentN' method ('N' is the order in declared properties) for each information
 *   property to make that they can be deconstructed. [Reference](https://kotlinlang.org/docs/destructuring-declarations.html).
 *
 * @param privateProperties Means that the private properties are also information. If the value is `true`, the private
 *   properties will be used in all generated information methods.
 * @param primaryProperties Means that the private properties are also information. If the value is `true`, the private
 *   properties will be used in all generated information methods.
 * @param bodyProperties Means that the properties declared in the class like body are also information. If the value
 *   is `true`, the class like body properties will be used in all generated information methods.
 *
 * @param superEquals Generated 'equals' method contains a call to `super.equals(other)`.
 * @param superHashCode Generated 'hashCode' method contains a call to `super.hashCode()`.
 *
 * @author 凛 (RinOrz)
 */
@Target(AnnotationTarget.CLASS)
@Retention(AnnotationRetention.SOURCE)
annotation class Info(
  val equatable: Boolean = true,
  val hashable: Boolean = true,
  val readable: Boolean = true,
  val copyable: Boolean = true,
  val destructurable: Boolean = true,

  val privateProperties: Boolean = false,
  val primaryProperties: Boolean = true,
  val bodyProperties: Boolean = true,

  val superEquals: Boolean = true,
  val superHashCode: Boolean = true,
) {

  /**
   * Disables property to avoid join into code generated by [Info].
   *
   * Note that this annotation depends on [Info]. Only properties declared in the class annotated with [Info] can use
   * this annotation, otherwise the Kotlin's compiler will report an error.
   *
   * For example:
   * ```
   * class User(val id: Int) {
   *   @Intangible(generateComponentN = true)
   *   val name: String get() = "user$id"
   * }
   *
   * print(User(1).toString())   // "User(id=1)"
   * print(User(1).component1()) // "1"
   * print(User(1).component2()) // "user1"
   * ```
   *
   * @param enabledEquals Enable to join this property into the code of the generated 'equals' method.
   * @param enabledHashCode Enable to join this property into the code of the generated 'hashCode' method.
   * @param enabledToString Enable to join this property into the code of the generated 'toString' method.
   * @param enabledCopy Enable to join this property into the code of the generated 'copy' method.
   * @param enabledComponent Enable to generate 'componentN' method for this property.
   * @author 凛 (RinOrz)
   */
  @Target(AnnotationTarget.PROPERTY)
  @Retention(AnnotationRetention.SOURCE)
  annotation class Disable(
    val enabledEquals: Boolean = false,
    val enabledHashCode: Boolean = false,
    val enabledToString: Boolean = false,
    val enabledCopy: Boolean = false,
    val enabledComponent: Boolean = false,
  )

  /**
   * Represents a synthetic interface for class marked with [Info], all classes marked with [Info] will automatically
   * implement this interface.
   *
   * @author 凛 (RinOrz)
   */
  @Deprecated(InternalSweektCompilerApi, level = DeprecationLevel.HIDDEN)
  interface Synthetic {

    /**
     * Invokes the `equals` method generated by the compiler for the [Info] class.
     *
     * Note that this annotation depends on [Info]. This method can only be invoked in the class annotated with [Info],
     * otherwise the Kotlin's compiler will report an error.
     */
    fun infoEquals(other: Any?): Boolean = compilerImplementation()

    /**
     * Invokes the `hashCode` method generated by the compiler for the [Info] class.
     *
     * Note that this annotation depends on [Info]. This method can only be invoked in the class annotated with [Info],
     * otherwise the Kotlin's compiler will report an error.
     */
    fun infoHashCode(): Int = compilerImplementation()

    /**
     * Invokes the `toString` method generated by the compiler for the [Info] class.
     *
     * Note that this annotation depends on [Info]. This method can only be invoked in the class annotated with [Info],
     * otherwise the Kotlin's compiler will report an error.
     */
    fun infoToString(): String = compilerImplementation()
  }
}